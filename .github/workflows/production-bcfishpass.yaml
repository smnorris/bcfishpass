name: production-bcfishpass
run-name: ${{ github.actor }} Run bcfishpass on prod
on:
  schedule:
    - cron: '0 16 * * MON'
  workflow_dispatch:
env:
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_ENDPOINT_URL: https://nrs.objectstore.gov.bc.ca
  AWS_S3_ENDPOINT: nrs.objectstore.gov.bc.ca
  AWS_VIRTUAL_HOSTING: FALSE
  AWS_EC2_METADATA_DISABLED: True
  CPL_VSISTDIN_BUFFER_LIMIT: -1
jobs:
  data-refresh:
    runs-on: ubuntu-latest
    environment: production
    container: ghcr.io/smnorris/bcfishpass:main
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Run the jobs
        run: cd jobs && ./load_weekly
  bcfishobs:
    runs-on: ubuntu-latest
    environment: production
    container: ghcr.io/smnorris/bcfishpass:main
    needs: data-refresh
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          repository: smnorris/bcfishobs
          ref: v0.2.0
      - name: Process bcfishobs
        run: |
          mkdir -p .make
          make -t .make/setup
          make -t .make/load_static
          make -t .make/fiss_fish_obsrvtn_pnt_sp
          make --debug=basic
  load-csv:
    runs-on: ubuntu-latest
    environment: production
    container: ghcr.io/smnorris/bcfishpass:main
    needs: bcfishobs
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Load csv data, parameters
        run:  |
          cp parameters/example_newgraph/*csv parameters/
          jobs/load_csv
  load-xings:
    runs-on: ubuntu-latest
    environment: production
    container: ghcr.io/smnorris/bcfishpass:main
    needs: load-csv
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Load modelled crossings from archive
        run:  jobs/load_modelled_stream_crossings
  model-xings:
    runs-on: ubuntu-latest
    environment: production
    container: ghcr.io/smnorris/bcfishpass:main
    needs: load-xings
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Build modelled crossings
        run:  jobs/model_stream_crossings
  prep:
    runs-on: ubuntu-latest
    environment: production
    container: ghcr.io/smnorris/bcfishpass:main
    needs: model-xings
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Run the jobs
        run:  jobs/model_prep
  model-access-1:
    runs-on: ubuntu-latest
    environment: production
    container: ghcr.io/smnorris/bcfishpass:main
    needs: prep
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Access model 1
        run:  |
          cd model/01_access
          ./model_access_1.sh
  model-access-2:
    runs-on: ubuntu-latest
    environment: production
    container: ghcr.io/smnorris/bcfishpass:main
    needs: model-access-1
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Access model 2
        run:  |
          cd model/01_access
          ./model_access_2.sh
  model-habitat-linear:
    runs-on: ubuntu-latest
    environment: production
    container: ghcr.io/smnorris/bcfishpass:main
    needs: model-access-2
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
            fetch-tags: true
            fetch-depth: 0
      - name: Linear habitat model
        run:  |
          git config --global --add safe.directory /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}
          cd model/02_habitat_linear
          ./habitat_linear.sh
  release:
    runs-on: ubuntu-latest
    environment: production
    container: ghcr.io/smnorris/bcfishpass:main
    needs: model-habitat-linear
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Run the jobs
        run:  |
          jobs/release_fptwg
